import pdb
from types import FrameType
from typing import Any, Callable, Optional, Tuple, Union

class PdbServer(pdb.Pdb):
    def __init__(self, port: Union[int, str], *args: Any, **kwargs: Any) -> None: ...
    def set_trace(self, frame: Optional[FrameType] = ...) -> None: ...
    def close(self) -> None: ...


class PdbClient:
    server_pid: int = ...
    port: Union[int, str] = ...
    def __init__(self, pid: int, port: Union[int, str]) -> None: ...
    def connect(self) -> None: ...
    def send_cmd(self, cmd: str) -> None: ...
    send: Callable[[str], None] = ...
    def recv(self) -> Tuple[str, bool]: ...
    def send_and_recv(self, cmd: str) -> Tuple[str, bool]: ...
    def interactive_loop(self) -> None: ...
